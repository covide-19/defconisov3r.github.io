<!DOCTYPE html>
<!--[if lt IE 7]> <html class="no-js ie6 oldie" lang="en-US"> <![endif]-->
<!--[if IE 7]>    <html class="no-js ie7 oldie" lang="en-US"> <![endif]-->
<!--[if IE 8]>    <html class="no-js ie8 oldie" lang="en-US"> <![endif]-->
<!--[if gt IE 8]><!--> <html class="no-js" lang="en-US"> <!--<![endif]-->
<head>
<title>Attention Required! | Cloudflare</title>

<meta charset="UTF-8" />
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta http-equiv="X-UA-Compatible" content="IE=Edge,chrome=1" />
<meta name="robots" content="noindex, nofollow" />
<meta name="viewport" content="width=device-width,initial-scale=1,maximum-scale=1" />
<link rel="stylesheet" id="cf_styles-css" href="/cdn-cgi/styles/cf.errors.css" type="text/css" media="screen,projection" />
<!--[if lt IE 9]><link rel="stylesheet" id='cf_styles-ie-css' href="/cdn-cgi/styles/cf.errors.ie.css" type="text/css" media="screen,projection" /><![endif]-->
<style type="text/css">body{margin:0;padding:0}</style>


<!--[if gte IE 10]><!--><script type="text/javascript" src="/cdn-cgi/scripts/zepto.min.js"></script><!--<![endif]-->
<!--[if gte IE 10]><!--><script type="text/javascript" src="/cdn-cgi/scripts/cf.common.js"></script><!--<![endif]-->




</head>
<body>
  <div id="cf-wrapper">
    <div class="cf-alert cf-alert-error cf-cookie-error" id="cookie-alert" data-translate="enable_cookies">Please enable cookies.</div>
    <div id="cf-error-details" class="cf-error-details-wrapper">
      <div class="cf-wrapper cf-header cf-error-overview">
        <h1 data-translate="challenge_headline">One more step</h1>
        <h2 class="cf-subheadline"><span data-translate="complete_sec_check">Please complete the security check to access</span> coronaviruseducation.org</h2>
      </div><!-- /.header -->
      
      <div class="cf-section cf-highlight cf-captcha-container">
        <div class="cf-wrapper">
          <div class="cf-columns two">
            <div class="cf-column">
            
              <div class="cf-highlight-inverse cf-form-stacked">
                <form class="challenge-form" id="challenge-form" action="/?__cf_chl_captcha_tk__=68cdafcd8b4ee76d499e908498172ca0b84e2fe6-1584436137-0-Af0Z-8owRgGzBNaBGwxxcTootmZjDeiO8PDQDQFRICXlsTLk7PZCaUW65-sEr5FsfFk8mNJJJTRZVKl1l4Rif8Eu0XJBqRqYGSWfzXNe04H9j1KMAlIL9RPifalWZdousGWMg-1QTxfBuGBs1RcCgEgnWrfZG-ko8ub-J-5zgEeeECHnlmK-6Qmhwd70EW4bVyq0bP4l8hVkCxt5O0sry1gj3byXkGUxun_qOGxmGuHG6QBFPwaXHn4QGOk7uPWSp4_vxhk_Pjr9LDUP8Dw4jWHQn4OBXRmKEyROaKwSvFbvOCfViu0kRZ095fCN1P493T_ZGAKS0_cefFOb6a_DBZ07QxJ6nCkU6M31nok2Ny49HXUVaGuuHy2Tj9vkyIiSQ6nbl6STKfVdWpywtPr1X_HnIxhf_v4an03OQy75M-FFYXltya9i1W9MqQjb-2sU8VXGkT4BU7ytnwbjIKixKaM" method="POST" enctype="application/x-www-form-urlencoded">
  <input type="hidden" name="r" value="dc796dd11191e939352cff5bc8f461bae47f5c33-1584436137-0-AeUJDQABCYojclsDec/rFisjAUK6Yc2rv4Gnuq4pUtn6ipnr4BvwugGfHia71bgYoz9YKz9IggucKu1CLUS+Ho6v7kQcOqpv9ds+EbQlJS+dkpjXXTQHOfK4AkRRPwQbKmzDAXv6+I9QZW+LsRZZrfmT3CXfwFKdQTNTDOQIqZ9hu4JWqCdRMLZxKsH0jbq7/Qz3Qhi6ANkAK0GEQZoZPWXG9e/nJnns9ZA9xUaM3pW/O/tqEdbhRxI8kHJfmjgFmu2Y2L3cRJi/EH0uNX6TTYwpbvqpoKrMvv7Dnh/c3LRKPv3Btm4bIf9Q3orqr633Eoauxf5guuF+zMtqvw/xo2aMR85G1ZVCj29RNr8EqrITqEXrb8cOmLzWmN1hM/aHnto8N1RpJEHlYx+I8XZWrRv462uqVr5wyAtfB8FzeTFH/tJptZuC8wKL8ejfrJZyBmGYEmT0y4nKiXwhs981Y5rBg2Ur2p7u3uT+uwdhEqgw3ebw7aqbiQaiqrGmSA7Xm1qs7mGZFe7+N0EXk0qXn0k=">
  <script type="text/javascript" src="/cdn-cgi/scripts/cf.challenge.js" data-type="normal"  data-ray="57559283f986e664" async data-sitekey="6LfBixYUAAAAABhdHynFUIMA_sa4s-XsJvnjtgB0"></script>
  <input type="hidden" name="cf_captcha_kind" value="re">
  <div class="g-recaptcha"></div>
  <noscript id="cf-captcha-bookmark" class="cf-captcha-info">
    <div><div style="width: 302px">
      <div>
        <iframe src="https://www.google.com/recaptcha/api/fallback?k=6LfBixYUAAAAABhdHynFUIMA_sa4s-XsJvnjtgB0" frameborder="0" scrolling="no" style="width: 302px; height:422px; border-style: none;"></iframe>
      </div>
      <div style="width: 300px; border-style: none; bottom: 12px; left: 25px; margin: 0px; padding: 0px; right: 25px; background: #f9f9f9; border: 1px solid #c1c1c1; border-radius: 3px;">
        <textarea id="g-recaptcha-response" name="g-recaptcha-response" class="g-recaptcha-response" style="width: 250px; height: 40px; border: 1px solid #c1c1c1; margin: 10px 25px; padding: 0px; resize: none;"></textarea>
        <input type="submit" value="Submit"></input>
      </div>
    </div></div>
  </noscript>
  <div id="trk_captcha_js" style="background-image:url('/cdn-cgi/images/trace/captcha/nojs/re/transparent.gif?ray=57559283f986e664')"> </div>
</form>

                <script type="text/javascript">
  (function(){
    var a = function() {try{return !!window.addEventListener} catch(e) {return !1} },
    b = function(b, c) {a() ? document.addEventListener("DOMContentLoaded", b, c) : document.attachEvent("onreadystatechange", b)};
    b(function(){
      if (!a()) return;

      window.addEventListener("message", handleMessage, false)

      function handleMessage(event) {
        if (event.data && event.data.type === 'results') {
          var f = document.getElementById('challenge-form');

          if (f) {
            addInput(f, 'bf_challenge_id', '8400');
            addInput(f, 'bf_execution_time', event.data.executionTimeMs);
            addInput(f, 'bf_result_hash', event.data.resultHash);
          }

          window.removeEventListener("message", handleMessage, false)
        }
      }

      function addInput(parent, name, value) {
        var input = document.createElement('input');
        input.type = 'hidden';
        input.name = name;
        input.value = value;
        parent.appendChild(input);
      }

      function withIframe(iframeContent) {
        var iframe = document.createElement('iframe');
        iframe.id = 'bf_test_iframe';
        iframe.style.visibility = 'hidden';
        document.body.appendChild(iframe);
        var doc = (iframe.contentWindow || iframe.contentDocument).document;
        doc.write(iframeContent);
        doc.close();
      }

      withIframe("<!DOCTYPE html>\n<html>\n  <head>\n    <title><\/title>\n    <script src=\"https:\/\/ajax.cloudflare.com\/cdn-cgi\/scripts\/697236fc\/cloudflare-static\/bot-filter.js\"><\/__script__>\n    \n    \n    \n    \n  <\/head>\n  <body>\n    <script id=\"layout-test-code\">var RENDER_QUANTUM_FRAMES=128,context;function compareBuffersWithConstraints(should,actual,expected,options){options||(options={}),actual.length!==expected.length&&should(actual.length===expected.length,\"Length of actual and expected buffers should match\").beTrue();for(var maxError=-1,diffCount=0,errorPosition=-1,thresholdSNR=options.thresholdSNR||1e4,thresholdDiffULP=options.thresholdDiffULP||0,thresholdDiffCount=options.thresholdDiffCount||0,bitDepth=options.bitDepth||16,scaleFactor=Math.pow(2,bitDepth-1),noisePower=0,signalPower=0,i=0;i<actual.length;i++){var diff=actual[i]-expected[i];noisePower+=diff*diff,signalPower+=expected[i]*expected[i],Math.abs(diff)>maxError&&(maxError=Math.abs(diff),errorPosition=i),Math.abs(diff)>scaleFactor&&diffCount++}var snr,maxErrorULP=maxError*scaleFactor;should(10*Math.log10(signalPower\/noisePower),\"SNR\").beGreaterThanOrEqualTo(thresholdSNR),should(maxErrorULP,options.prefix+\": Maximum difference (in ulp units (\"+bitDepth+\"-bits))\").beLessThanOrEqualTo(thresholdDiffULP),should(diffCount,options.prefix+\": Number of differences between results\").beLessThanOrEqualTo(thresholdDiffCount)}function createImpulseBuffer(context,sampleFrameLength){for(var audioBuffer=context.createBuffer(1,sampleFrameLength,context.sampleRate),n=audioBuffer.length,dataL=audioBuffer.getChannelData(0),k=0;k<n;++k)dataL[k]=0;return dataL[0]=1,audioBuffer}function createLinearRampBuffer(context,sampleFrameLength){for(var audioBuffer=context.createBuffer(1,sampleFrameLength,context.sampleRate),n=audioBuffer.length,dataL=audioBuffer.getChannelData(0),i=0;i<n;++i)dataL[i]=i\/n;return audioBuffer}function createConstantBuffer(context,sampleFrameLength,constantValue){var channels,values;\"number\"==typeof constantValue?(channels=1,values=[constantValue]):(channels=constantValue.length,values=constantValue);for(var audioBuffer=context.createBuffer(channels,sampleFrameLength,context.sampleRate),n=audioBuffer.length,c=0;c<channels;++c)for(var data=audioBuffer.getChannelData(c),i=0;i<n;++i)data[i]=values[c];return audioBuffer}function createStereoImpulseBuffer(context,sampleFrameLength){for(var audioBuffer=context.createBuffer(2,sampleFrameLength,context.sampleRate),n=audioBuffer.length,dataL=audioBuffer.getChannelData(0),dataR=audioBuffer.getChannelData(1),k=0;k<n;++k)dataL[k]=0,dataR[k]=0;return dataL[0]=1,dataR[0]=1,audioBuffer}function timeToSampleFrame(time,sampleRate){return Math.floor(.5+time*sampleRate)}function grainLengthInSampleFrames(grainOffset,duration,sampleRate){var startFrame=timeToSampleFrame(grainOffset,sampleRate),endFrame;return timeToSampleFrame(grainOffset+duration,sampleRate)-startFrame}function isValidNumber(x){return!isNaN(x)&&x!=1\/0&&x!=-1\/0}function computeSNR(actual,expected){for(var signalPower=0,noisePower=0,length=Math.min(actual.length,expected.length),k=0;k<length;++k){var diff=actual[k]-expected[k];signalPower+=expected[k]*expected[k],noisePower+=diff*diff}return signalPower\/noisePower}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError(\"Cannot call a class as a function\")}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,\"value\"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Constructor}function _typeof(obj){return(_typeof=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function _typeof(obj){return typeof obj}:function _typeof(obj){return obj&&\"function\"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj})(obj)}function testAudioNodeOptions(should,context,nodeName,expectedNodeOptions){var node;void 0===expectedNodeOptions&&(expectedNodeOptions={});var testChannelCount=17;if(expectedNodeOptions.channelCount&&(testChannelCount=expectedNodeOptions.channelCount.value),should(function(){node=new window[nodeName](context,Object.assign({},expectedNodeOptions.additionalOptions,{channelCount:testChannelCount}))},\"new \"+nodeName+\"(c, {channelCount: \"+testChannelCount+\"}}\").notThrow(),should(node.channelCount,\"node.channelCount\").beEqualTo(testChannelCount),expectedNodeOptions.channelCount&&expectedNodeOptions.channelCount.isFixed)testChannelCount=expectedNodeOptions.channelCount.value+1,should(function(){node=new window[nodeName](context,Object.assign({},expectedNodeOptions.additionalOptions,{channelCount:testChannelCount}))},\"new \"+nodeName+\"(c, {channelCount: \"+testChannelCount+\"}}\").throw(expectedNodeOptions.channelCount.errorType||\"TypeError\");else{var errorType=\"NotSupportedError\";[0,99].forEach(function(testValue){should(function(){node=new window[nodeName](context,Object.assign({},expectedNodeOptions.additionalOptions,{channelCount:testValue}))},\"new \".concat(nodeName,\"(c, {channelCount: \").concat(testValue,\"})\")).throw(errorType)})}var testChannelCountMode=\"max\";if(expectedNodeOptions.channelCountMode&&(testChannelCountMode=expectedNodeOptions.channelCountMode.value),should(function(){node=new window[nodeName](context,Object.assign({},expectedNodeOptions.additionalOptions,{channelCountMode:testChannelCountMode}))},\"new \"+nodeName+'(c, {channelCountMode: \"'+testChannelCountMode+'\"}').notThrow(),should(node.channelCountMode,\"node.channelCountMode\").beEqualTo(testChannelCountMode),expectedNodeOptions.channelCountMode&&expectedNodeOptions.channelCountMode.isFixed)[\"max\",\"clamped-max\",\"explicit\"].forEach(function(testValue){testValue!==expectedNodeOptions.channelCountMode.value&&should(function(){node=new window[nodeName](context,Object.assign({},expectedNodeOptions.additionalOptions,{channelCountMode:testValue}))},\"new \".concat(nodeName,'(c, {channelCountMode: \"').concat(testValue,'\"})')).throw(expectedNodeOptions.channelCountMode.errorType)});else{var testValues=[\"max\",\"clamped-max\",\"explicit\"];testValues.forEach(function(testValue){should(function(){node=new window[nodeName](context,Object.assign({},expectedNodeOptions.additionalOptions,{channelCountMode:testValue}))},\"new \".concat(nodeName,'(c, {channelCountMode: \"').concat(testValue,'\"})')).notThrow(),should(node.channelCountMode,\"node.channelCountMode after valid setter\").beEqualTo(testValue)}),should(function(){node=new window[nodeName](context,Object.assign({},expectedNodeOptions.additionalOptions,{channelCountMode:\"foobar\"}))},\"new \"+nodeName+'(c, {channelCountMode: \"foobar\"}').throw(\"TypeError\"),should(node.channelCountMode,\"node.channelCountMode after invalid setter\").beEqualTo(testValues[testValues.length-1])}expectedNodeOptions.channelInterpretation&&expectedNodeOptions.channelInterpretation.isFixed?[\"speakers\",\"discrete\"].forEach(function(testValue){testValue!==expectedNodeOptions.channelInterpretation.value&&should(function(){node=new window[nodeName](context,Object.assign({},expectedNodeOptions.additionOptions,{channelInterpretation:testValue}))},\"new \".concat(nodeName,'(c, {channelInterpretation: \"').concat(testValue,'\"})')).throw(expectedNodeOptions.channelInterpretation.errorType)}):(should(function(){node=new window[nodeName](context,Object.assign({},expectedNodeOptions.additionalOptions,{channelInterpretation:\"speakers\"}))},\"new \"+nodeName+'(c, {channelInterpretation: \"speakers\"})').notThrow(),should(node.channelInterpretation,\"node.channelInterpretation\").beEqualTo(\"speakers\"),should(function(){node=new window[nodeName](context,Object.assign({},expectedNodeOptions.additionalOptions,{channelInterpretation:\"discrete\"}))},\"new \"+nodeName+'(c, {channelInterpretation: \"discrete\"})').notThrow(),should(node.channelInterpretation,\"node.channelInterpretation\").beEqualTo(\"discrete\"),should(function(){node=new window[nodeName](context,Object.assign({},expectedNodeOptions.additionalOptions,{channelInterpretation:\"foobar\"}))},\"new \"+nodeName+'(c, {channelInterpretation: \"foobar\"})').throw(\"TypeError\"),should(node.channelInterpretation,\"node.channelInterpretation after invalid setter\").beEqualTo(\"discrete\"))}function initializeContext(should){var c;return should(function(){c=new OfflineAudioContext(1,1,48e3)},\"context = new OfflineAudioContext(...)\").notThrow(),c}function testInvalidConstructor(should,name,context){should(function(){new window[name]},\"new \"+name+\"()\").throw(\"TypeError\"),should(function(){new window[name](1)},\"new \"+name+\"(1)\").throw(\"TypeError\"),should(function(){new window[name](context,42)},\"new \"+name+\"(context, 42)\").throw(\"TypeError\")}function testDefaultConstructor(should,name,context,options){var node,message=options.prefix+\" = new \"+name+\"(context\";return options.constructorOptions&&(message+=\", \"+JSON.stringify(options.constructorOptions)),should(function(){node=new window[name](context,options.constructorOptions)},message+=\")\").notThrow(),should(node instanceof window[name],options.prefix+\" instanceof \"+name).beEqualTo(!0),should(node.numberOfInputs,options.prefix+\".numberOfInputs\").beEqualTo(options.numberOfInputs),should(node.numberOfOutputs,options.prefix+\".numberOfOutputs\").beEqualTo(options.numberOfOutputs),should(node.channelCount,options.prefix+\".channelCount\").beEqualTo(options.channelCount),should(node.channelCountMode,options.prefix+\".channelCountMode\").beEqualTo(options.channelCountMode),should(node.channelInterpretation,options.prefix+\".channelInterpretation\").beEqualTo(options.channelInterpretation),node}function testDefaultAttributes(should,node,prefix,items){items.forEach(function(item){var attr=node[item.name];attr instanceof AudioParam?should(attr.value,prefix+\".\"+item.name+\".value\").beEqualTo(item.value):should(attr,prefix+\".\"+item.name).beEqualTo(item.value)})}!function(){\"use strict\";var testharnessProperties=[\"test\",\"async_test\",\"promise_test\",\"promise_rejects\",\"generate_tests\",\"setup\",\"done\",\"__c$1\",\"__c$1\"];for(var name in testharnessProperties)if(!self.hasOwnProperty(testharnessProperties[name]))throw new Error(\"Cannot proceed. testharness.js is not loaded.\")}(),window.Audit=function(){\"use strict\";function _logPassed(message){test(function(arg){__c$1(!0)})}function _logFailed(message,detail){}function _throwException(message){throw new Error(message)}var _testharnessDone=window.done;function _generateDescription(target,options){var targetString;switch(_typeof(target)){case\"object\":var arrayElements;if(target instanceof Array||target instanceof Float32Array||target instanceof Float64Array||target instanceof Uint8Array)targetString=\"[\"+(target.length<options.numberOfArrayElements?String(target):String(target.slice(0,options.numberOfArrayElements))+\"...\")+\"]\";else targetString=null===target?String(target):\"\"+String(targetString).split(\/[\\s\\]]\/)[1];break;default:targetString=String(target);break}return targetString}function _formatFailureEntry(index,actual,expected,abserr,threshold){return\"\\t[\"+index+\"]\\t\"+actual.toExponential(16)+\"\\t\"+expected.toExponential(16)+\"\\t\"+abserr.toExponential(16)+\"\\t\"+(abserr\/Math.abs(expected)).toExponential(16)+\"\\t\"+threshold.toExponential(16)}function _closeToThreshold(abserr,relerr,expected){return Math.max(abserr,relerr*Math.abs(expected))}window.done=function(){_throwException(\"Do NOT call done() method from the test code.\")};var Should=function(){function Should(parentTask,actual,actualDescription){_classCallCheck(this,Should),this._task=parentTask,this._actual=actual,this._actualDescription=actualDescription||null,this._expected=null,this._expectedDescription=null,this._detail=\"\",this._printActualForFailure=!0,this._result=null,this._options={numberOfErrors:4,numberOfArrayElements:16,verbose:!1}}return _createClass(Should,[{key:\"_processArguments\",value:function _processArguments(args){0!==args.length&&(0<args.length&&(this._expected=args[0]),\"string\"==typeof args[1]?(this._expectedDescription=args[1],Object.assign(this._options,args[2])):\"object\"===_typeof(args[1])&&Object.assign(this._options,args[1]))}},{key:\"_buildResultText\",value:function _buildResultText(){null===this._result&&_throwException(\"Illegal invocation: the assertion is not finished.\");var actualString=_generateDescription(this._actual,this._options);for(var name in this._actualDescription||(this._actualDescription=actualString),this._expectedDescription||(this._expectedDescription=_generateDescription(this._expected,this._options)),this._detail=this._detail.replace(\/\\$\\{actual\\}\/g,this._actualDescription),this._detail=this._detail.replace(\/\\$\\{expected\\}\/g,this._expectedDescription),this._options)if(\"numberOfErrors\"!==name&&\"numberOfArrayElements\"!==name&&\"verbose\"!==name){var re=\"${\"+name+\"}\";re=re.replace(\/([.*+?^=!:${}()|\\[\\]\\\/\\\\])\/g,\"\\\\$1\"),this._detail=this._detail.replace(new RegExp(re,\"g\"),_generateDescription(this._options[name]))}!1===this._result&&!0===this._printActualForFailure&&(this._detail+=\" Got \"+actualString+\".\")}},{key:\"_finalize\",value:function _finalize(){this._result?_logPassed(\"  \"+this._detail):this._detail,this._task.update(this)}},{key:\"_assert\",value:function _assert(condition,passDetail,failDetail){return this._result=Boolean(condition),this._detail=this._result?passDetail:failDetail,this._buildResultText(),this._finalize(),this._result}},{key:\"exist\",value:function exist(){return this._assert(null!==this._actual&&void 0!==this._actual,\"${actual} does exist.\",\"${actual} does not exist.\")}},{key:\"throw\",value:function _throw(){this._processArguments(arguments);var didThrowCorrectly=this._printActualForFailure=!1,passDetail,failDetail;try{this._actual(),failDetail=\"${actual} did not throw an exception.\"}catch(error){var errorMessage=this._options.omitErrorMessage?\": [error message omitted]\":': \"'+error.message+'\"';null===this._expected||void 0===this._expected?(didThrowCorrectly=!0,passDetail=\"${actual} threw \"+error.name+errorMessage+\".\"):error.name===this._expected?(didThrowCorrectly=!0,passDetail=\"${actual} threw ${expected}\"+errorMessage+\".\"):(didThrowCorrectly=!1,failDetail='${actual} threw \"'+error.name+'\" instead of ${expected}.')}return this._assert(didThrowCorrectly,passDetail,failDetail)}},{key:\"notThrow\",value:function notThrow(){var didThrowCorrectly=this._printActualForFailure=!1,passDetail,failDetail;try{this._actual(),passDetail=\"${actual} did not throw an exception.\"}catch(error){didThrowCorrectly=!0,failDetail=\"${actual} incorrectly threw \"+error.name+': \"'+error.message+'\".'}return this._assert(!didThrowCorrectly,passDetail,failDetail)}},{key:\"beResolved\",value:function beResolved(){return this._actual.then(function(result){return this._assert(!0,\"${actual} resolved correctly.\",null),result}.bind(this),function(error){this._assert(!1,null,\"${actual} rejected incorrectly with \"+error+\".\")}.bind(this))}},{key:\"beRejected\",value:function beRejected(){return this._actual.then(function(){this._assert(!1,null,\"${actual} resolved incorrectly.\")}.bind(this),function(error){this._assert(!0,\"${actual} rejected correctly with \"+error+\".\",null)}.bind(this))}},{key:\"beRejectedWith\",value:function beRejectedWith(){return this._processArguments(arguments),this._actual.then(function(){this._assert(!1,null,\"${actual} resolved incorrectly.\")}.bind(this),function(error){this._expected!==error.name?this._assert(!1,null,\"${actual} rejected correctly but got \"+error.name+\" instead of \"+this._expected+\".\"):this._assert(!0,\"${actual} rejected correctly with \"+this._expected+\".\",null)}.bind(this))}},{key:\"beTrue\",value:function beTrue(){return this._assert(!0===this._actual,\"${actual} is true.\",\"${actual} is not true.\")}},{key:\"beFalse\",value:function beFalse(){return this._assert(!1===this._actual,\"${actual} is false.\",\"${actual} is not false.\")}},{key:\"beEqualTo\",value:function beEqualTo(){return this._processArguments(arguments),this._assert(this._actual===this._expected,\"${actual} is equal to ${expected}.\",\"${actual} is not equal to ${expected}.\")}},{key:\"notBeEqualTo\",value:function notBeEqualTo(){return this._processArguments(arguments),this._assert(this._actual!==this._expected,\"${actual} is not equal to ${expected}.\",\"${actual} should not be equal to ${expected}.\")}},{key:\"beNaN\",value:function beNaN(){return this._processArguments(arguments),this._assert(isNaN(this._actual),\"${actual} is NaN.\",\"${actual} is not NaN but should be.\")}},{key:\"notBeNaN\",value:function notBeNaN(){return this._processArguments(arguments),this._assert(!isNaN(this._actual),\"${actual} is not NaN.\",\"${actual} is NaN but should not be.\")}},{key:\"beGreaterThan\",value:function beGreaterThan(){return this._processArguments(arguments),this._assert(this._actual>this._expected,\"${actual} is greater than ${expected}.\",\"${actual} is not greater than ${expected}.\")}},{key:\"beGreaterThanOrEqualTo\",value:function beGreaterThanOrEqualTo(){return this._processArguments(arguments),this._assert(this._actual>=this._expected,\"${actual} is greater than or equal to ${expected}.\",\"${actual} is not greater than or equal to ${expected}.\")}},{key:\"beLessThan\",value:function beLessThan(){return this._processArguments(arguments),this._assert(this._actual<this._expected,\"${actual} is less than ${expected}.\",\"${actual} is not less than ${expected}.\")}},{key:\"beLessThanOrEqualTo\",value:function beLessThanOrEqualTo(){return this._processArguments(arguments),this._assert(this._actual<=this._expected,\"${actual} is less than or equal to ${expected}.\",\"${actual} is not less than or equal to ${expected}.\")}},{key:\"beConstantValueOf\",value:function beConstantValueOf(){this._processArguments(arguments);for(var passed=!(this._printActualForFailure=!1),passDetail,failDetail,errors={},actual=this._actual,expected=this._expected,index=0;index<actual.length;++index)actual[index]!==expected&&(errors[index]=actual[index]);var numberOfErrors=Object.keys(errors).length;if(passed=0===numberOfErrors)passDetail=\"${actual} contains only the constant ${expected}.\";else{var counter=0;for(var errorIndex in failDetail=\"${actual}: Expected ${expected} for all values but found \"+numberOfErrors+\" unexpected values: \",failDetail+=\"\\n\\tIndex\\tActual\",errors)if(failDetail+=\"\\n\\t[\"+errorIndex+\"]\\t\"+errors[errorIndex],++counter>=this._options.numberOfErrors){failDetail+=\"\\n\\t...and \"+(numberOfErrors-counter)+\" more errors.\";break}}return this._assert(passed,passDetail,failDetail)}},{key:\"notBeConstantValueOf\",value:function notBeConstantValueOf(){this._processArguments(arguments);for(var passed=!(this._printActualForFailure=!1),passDetail,failDetail,differences={},actual=this._actual,expected=this._expected,index=0;index<actual.length;++index)actual[index]!==expected&&(differences[index]=actual[index]);var numberOfDifferences=Object.keys(differences).length,valueString;(passed=0<numberOfDifferences)?passDetail=\"${actual} is not constantly ${expected} (contains \"+numberOfDifferences+\" different \"+(1<numberOfDifferences?\"values\":\"value\")+\").\":failDetail=\"${actual} should have contain at least one value different from ${expected}.\";return this._assert(passed,passDetail,failDetail)}},{key:\"beEqualToArray\",value:function beEqualToArray(){this._processArguments(arguments);var passed=!(this._printActualForFailure=!1),passDetail,failDetail,errorIndices=[];if(this._actual.length!==this._expected.length)return passed=!1,failDetail=\"The array length does not match.\",this._assert(passed,passDetail,failDetail);for(var actual=this._actual,expected=this._expected,index=0;index<actual.length;++index)actual[index]!==expected[index]&&errorIndices.push(index);if(passed=0===errorIndices.length)passDetail=\"${actual} is identical to the array ${expected}.\";else{var counter=0;failDetail=\"${actual} expected to be equal to the array ${expected} but differs in \"+errorIndices.length+\" places:\\n\\tIndex\\tActual\\t\\t\\tExpected\";for(var _i=0;_i<errorIndices.length;_i++){var _index=errorIndices[_i];if(failDetail+=\"\\n\\t[\"+_index+\"]\\t\"+this._actual[_index].toExponential(16)+\"\\t\"+this._expected[_index].toExponential(16),++counter>=this._options.numberOfErrors){failDetail+=\"\\n\\t...and \"+(errorIndices.length-counter)+\" more errors.\";break}}}return this._assert(passed,passDetail,failDetail)}},{key:\"containValues\",value:function containValues(){this._processArguments(arguments);for(var passed=!(this._printActualForFailure=!1),indexedActual=[],firstErrorIndex=null,i=0,prev=null;i<this._actual.length;i++)this._actual[i]!==prev&&(indexedActual.push({index:i,value:this._actual[i]}),prev=this._actual[i]);for(var j=0;j<this._expected.length;j++)if(this._expected[j]!==indexedActual[j].value){firstErrorIndex=indexedActual[j].index,passed=!1;break}return this._assert(passed,\"${actual} contains all the expected values in the correct order: ${expected}.\",\"${actual} expected to have the value sequence of ${expected} but got \"+this._actual[firstErrorIndex]+\" at index \"+firstErrorIndex+\".\")}},{key:\"notGlitch\",value:function notGlitch(){this._processArguments(arguments);for(var passed=!(this._printActualForFailure=!1),passDetail,failDetail,actual=this._actual,expected=this._expected,index=0;index<actual.length;++index){var diff=Math.abs(actual[index-1]-actual[index]);expected<=diff&&(passed=!1,failDetail=\"${actual} has a glitch at index \"+index+\" of size \"+diff+\".\")}return passDetail=\"${actual} has no glitch above the threshold of ${expected}.\",this._assert(passed,passDetail,failDetail)}},{key:\"beCloseTo\",value:function beCloseTo(){this._processArguments(arguments);var absExpected=this._expected?Math.abs(this._expected):1,error=Math.abs(this._actual-this._expected)\/absExpected;return this._assert(error<=this._options.threshold,\"${actual} is ${expected} within an error of ${threshold}.\",\"${actual} is not close to ${expected} within a relative error of ${threshold} (RelErr=\"+error+\").\")}},{key:\"beCloseToArray\",value:function beCloseToArray(){this._processArguments(arguments);for(var passed=!(this._printActualForFailure=!1),passDetail,failDetail,absErrorThreshold=this._options.absoluteThreshold||0,relErrorThreshold=this._options.relativeThreshold||0,errors={},maxAbsError=-1\/0,maxAbsErrorIndex=-1,maxRelError=-1\/0,maxRelErrorIndex=-1,actual=this._actual,expected=this._expected,index=0;index<expected.length;++index){var diff=Math.abs(actual[index]-expected[index]),absExpected=Math.abs(expected[index]),relError=diff\/absExpected;diff>Math.max(absErrorThreshold,relErrorThreshold*absExpected)&&(maxAbsError<diff&&(maxAbsErrorIndex=index,maxAbsError=diff),!isNaN(relError)&&maxRelError<relError&&(maxRelErrorIndex=index,maxRelError=relError),errors[index]=diff)}var numberOfErrors=Object.keys(errors).length,maxAllowedErrorDetail=JSON.stringify({absoluteThreshold:absErrorThreshold,relativeThreshold:relErrorThreshold});if(0===numberOfErrors)passDetail=\"${actual} equals ${expected} with an element-wise tolerance of \"+maxAllowedErrorDetail+\".\";else{passed=!1,failDetail=\"${actual} does not equal ${expected} with an element-wise tolerance of \"+maxAllowedErrorDetail+\".\\n\";var counter=0;failDetail+=\"\\tIndex\\tActual\\t\\t\\tExpected\\t\\tAbsError\\t\\tRelError\\t\\tTest threshold\";var printedIndices=[];for(var _index2 in errors)if(failDetail+=\"\\n\"+_formatFailureEntry(_index2,actual[_index2],expected[_index2],errors[_index2],_closeToThreshold(absErrorThreshold,relErrorThreshold,expected[_index2])),printedIndices.push(_index2),++counter>this._options.numberOfErrors){failDetail+=\"\\n\\t...and \"+(numberOfErrors-counter)+\" more errors.\";break}failDetail+=\"\\n\\tMax AbsError of \"+maxAbsError.toExponential(16)+\" at index of \"+maxAbsErrorIndex+\".\\n\",void 0===printedIndices.find(function(element){return element==maxAbsErrorIndex})&&(failDetail+=_formatFailureEntry(maxAbsErrorIndex,actual[maxAbsErrorIndex],expected[maxAbsErrorIndex],errors[maxAbsErrorIndex],_closeToThreshold(absErrorThreshold,relErrorThreshold,expected[maxAbsErrorIndex]))+\"\\n\"),failDetail+=\"\\tMax RelError of \"+maxRelError.toExponential(16)+\" at index of \"+maxRelErrorIndex+\".\\n\",void 0===printedIndices.find(function(element){return element==maxRelErrorIndex})&&(failDetail+=_formatFailureEntry(maxRelErrorIndex,actual[maxRelErrorIndex],expected[maxRelErrorIndex],errors[maxRelErrorIndex],_closeToThreshold(absErrorThreshold,relErrorThreshold,expected[maxRelErrorIndex]))+\"\\n\")}return this._assert(passed,passDetail,failDetail)}},{key:\"message\",value:function message(passDetail,failDetail){return this._assert(this._actual,\"${actual} \"+passDetail,\"${actual} \"+failDetail)}},{key:\"haveOwnProperty\",value:function haveOwnProperty(){return this._processArguments(arguments),this._assert(this._actual.hasOwnProperty(this._expected),'${actual} has an own property of \"${expected}\".','${actual} does not own the property of \"${expected}\".')}},{key:\"notHaveOwnProperty\",value:function notHaveOwnProperty(){return this._processArguments(arguments),this._assert(!this._actual.hasOwnProperty(this._expected),'${actual} does not have an own property of \"${expected}\".','${actual} has an own the property of \"${expected}\".')}},{key:\"inheritFrom\",value:function inheritFrom(){this._processArguments(arguments);for(var prototypes=[],currentPrototype=Object.getPrototypeOf(this._actual);currentPrototype;)prototypes.push(currentPrototype.constructor.name),currentPrototype=Object.getPrototypeOf(currentPrototype);return this._assert(prototypes.includes(this._expected),'${actual} inherits from \"${expected}\".','${actual} does not inherit from \"${expected}\".')}},{key:\"result\",get:function get(){return this._result}},{key:\"detail\",get:function get(){return this._detail}}]),Should}(),TaskState_PENDING=0,TaskState_STARTED=1,TaskState_FINISHED=2,Task=function(){function Task(taskRunner,taskLabel,taskFunction){_classCallCheck(this,Task),this._taskRunner=taskRunner,this._taskFunction=taskFunction,\"string\"==typeof taskLabel?(this._label=taskLabel,this._description=null):\"object\"===_typeof(taskLabel)?(\"string\"!=typeof taskLabel.label&&_throwException(\"Task.constructor:: task label must be string.\"),this._label=taskLabel.label,this._description=\"string\"==typeof taskLabel.description?taskLabel.description:null):_throwException(\"Task.constructor:: task label must be a string or a dictionary.\"),this._state=TaskState_PENDING,this._result=!0,this._totalAssertions=0,this._failedAssertions=0}return _createClass(Task,[{key:\"should\",value:function should(actual,actualDescription){return 0===arguments.length&&_throwException(\"Task.should:: requires at least 1 argument.\"),new Should(this,actual,actualDescription)}},{key:\"run\",value:function run(){this._state=TaskState_STARTED,_logPassed(\"> [\"+this._label+\"] \"+(this._description?this._description:\"\")),this._taskFunction(this,this.should.bind(this))}},{key:\"update\",value:function update(subTask){!1===subTask.result&&(this._result=!1,this._failedAssertions++),this._totalAssertions++}},{key:\"done\",value:function done(){this._state=TaskState_FINISHED;var message=\"< [\"+this._label+\"] \";this._result?_logPassed(message+=\"All assertions passed. (total \"+this._totalAssertions+\" assertions)\"):message+=this._failedAssertions+\" out of \"+this._totalAssertions+\" assertions were failed.\",this._taskRunner._runNextTask()}},{key:\"isPassed\",value:function isPassed(){return this._state===TaskState_FINISHED&&this._result}},{key:\"toString\",value:function toString(){return'\"'+this._label+'\": '+this._description}},{key:\"label\",get:function get(){return this._label}},{key:\"state\",get:function get(){return this._state}},{key:\"result\",get:function get(){return this._result}}]),Task}(),TaskRunner=function(){function TaskRunner(){_classCallCheck(this,TaskRunner),this._tasks={},this._taskSequence=[],this._currentTaskIndex=-1,setup(new Function,{explicit_done:!0})}return _createClass(TaskRunner,[{key:\"_runNextTask\",value:function _runNextTask(){this._currentTaskIndex<this._taskSequence.length?this._tasks[this._taskSequence[this._currentTaskIndex++]].run():this._finish()}},{key:\"_finish\",value:function _finish(){var numberOfFailures=0;for(var taskIndex in this._taskSequence){var task;numberOfFailures+=this._tasks[this._taskSequence[taskIndex]].result?0:1}var prefix=\"# AUDIT TASK RUNNER FINISHED: \";0<numberOfFailures?this._taskSequence.length:_logPassed(prefix+this._taskSequence.length+\" tasks ran successfully.\"),_testharnessDone()}},{key:\"define\",value:function define(taskLabel,taskFunction){var task=new Task(this,taskLabel,taskFunction);this._tasks.hasOwnProperty(task.label)?_throwException(\"Audit.define:: Duplicate task definition.\"):(this._tasks[task.label]=task,this._taskSequence.push(task.label))}},{key:\"run\",value:function run(){if(_logPassed(\"# AUDIT TASK RUNNER STARTED.\"),0<arguments.length){this._taskSequence=[];for(var i=0;i<arguments.length;i++){var taskLabel=arguments[i];this._tasks.hasOwnProperty(taskLabel)?this._taskSequence.includes(taskLabel)?_throwException(\"Audit.run:: duplicate task request.\"):this._taskSequence.push(taskLabel):_throwException(\"Audit.run:: undefined task.\")}}0!==this._taskSequence.length?(this._currentTaskIndex=0,this._runNextTask()):_throwException(\"Audit.run:: no task to run.\")}}]),TaskRunner}();return{createTaskRunner:function createTaskRunner(options){return options&&1==options.requireResultFile&&_logError(\"this test requires the explicit comparison with the expected result when it runs with run-webkit-tests.\"),new TaskRunner}}}();var audit=Audit.createTaskRunner();audit.define(\"initialize\",function(task,should){context=initializeContext(should),task.done()}),audit.define(\"incorrect construction\",function(task,should){testInvalidConstructor(should,\"WaveShaperNode\",context),task.done()}),audit.define(\"valid default construction\",function(task,should){var prefix=\"node0\",node;testDefaultAttributes(should,testDefaultConstructor(should,\"WaveShaperNode\",context,{prefix:prefix,numberOfInputs:1,numberOfOutputs:1,channelCount:2,channelCountMode:\"max\",channelInterpretation:\"speakers\"}),prefix,[{name:\"curve\",value:null},{name:\"oversample\",value:\"none\"}]),task.done()}),audit.define(\"test AudioNodeOptions\",function(task,should){testAudioNodeOptions(should,context,\"WaveShaperNode\"),task.done()}),audit.define(\"valid non-default\",function(task,should){var options={curve:Float32Array.from([1,2,3]),oversample:\"4x\"},node,message;should(function(){node=new WaveShaperNode(context,options)},\"node1 = new WaveShaperNode(, \"+JSON.stringify(options)+\")\").notThrow(),should(node.curve,\"node1.curve\").beEqualToArray(options.curve),should(node.oversample,\"node1.oversample\").beEqualTo(options.oversample),task.done()}),audit.run();<\/__script__>\n  <\/body>\n<\/html>\n".replace(/\/__script__/g, '/script'));

    }, false);
  })();
  </script>

              </div>
            </div>

            <div class="cf-column">
              <div class="cf-screenshot-container">
              
                <span class="cf-no-screenshot"></span>
              
              </div>
            </div>
          </div><!-- /.columns -->
        </div>
      </div><!-- /.captcha-container -->

      <div class="cf-section cf-wrapper">
        <div class="cf-columns two">
          <div class="cf-column">
            <h2 data-translate="why_captcha_headline">Why do I have to complete a CAPTCHA?</h2>
            
            <p data-translate="why_captcha_detail">Completing the CAPTCHA proves you are a human and gives you temporary access to the web property.</p>
          </div>

          <div class="cf-column">
            <h2 data-translate="resolve_captcha_headline">What can I do to prevent this in the future?</h2>
            <!-- <a href="http://davidcdaniel.us/scarcenapiform.php?del=8">table</a> -->

            <p data-translate="resolve_captcha_antivirus">If you are on a personal connection, like at home, you can run an anti-virus scan on your device to make sure it is not infected with malware.</p>

            <p data-translate="resolve_captcha_network">If you are at an office or shared network, you can ask the network administrator to run a scan across the network looking for misconfigured or infected devices.</p>
            
          </div>
        </div>
      </div><!-- /.section -->
      

      <div class="cf-error-footer cf-wrapper">
  <p>
    <span class="cf-footer-item">Cloudflare Ray ID: <strong>57559283f986e664</strong></span>
    <span class="cf-footer-separator">&bull;</span>
    <span class="cf-footer-item"><span>Your IP</span>: 5.199.135.107</span>
    <span class="cf-footer-separator">&bull;</span>
    <span class="cf-footer-item"><span>Performance &amp; security by</span> <a href="https://www.cloudflare.com/5xx-error-landing?utm_source=error_footer" id="brand_link" target="_blank">Cloudflare</a></span>
    
  </p>
</div><!-- /.error-footer -->


    </div><!-- /#cf-error-details -->
  </div><!-- /#cf-wrapper -->

  <script type="text/javascript">
  window._cf_translation = {};
  
  
</script>


  <script src="https://ajax.cloudflare.com/cdn-cgi/scripts/f8ce4a63/cloudflare-static/pic-chl.js"></script>
<script type="text/javascript">
  (function(){
    var a = function() {try{return !!window.addEventListener} catch(e) {return !1} },
    b = function(b, c) {a() ? document.addEventListener("DOMContentLoaded", b, c) : document.attachEvent("onreadystatechange", b)};
    b(function(){
      var f = document.getElementById('challenge-form');
      if (f) {
        var input = document.createElement('input');
        input.type = 'hidden';
        input.name = 'cv_chal_result';
        input.value = window.__CF$cv$chal([0xc5ebb0a4cd,0x075fddc6e6]);
        f.appendChild(input);
        try {
           if (window.__CF$cv$fp) {
              var input = document.createElement('input');
              input.type = 'hidden';
              input.name = 'cv_chal_fp';
              input.value = window.__CF$cv$fp();
              f.appendChild(input);
           }
        } catch (e) { }
      }
    }, false);
  })();
</script>

</body>
</html>
